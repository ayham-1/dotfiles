
### Variables
#
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wmenu | xargs swaymsg exec --
set $screenshot exec grim -g "$(slurp)" - | swappy -f -
set $screen_lock swaylock -f -c 000000

# theme
exec_always import-gsettings

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
#output * bg ~/pix/wallpapers/wallpaper fill
output HDMI-A-1 mode 1920x1080@75Hz
output HDMI-A-1 pos 0 0 res 1920x1080
exec ~/.local/bin/random_wallpaper

# autostart
#exec swaymsg "workspace 1; exec librewolf;"
#exec swaymsg "workspace 2; exec $term;"
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec systemctl --user start xdg-desktop-portal
exec systemctl --user start xdg-desktop-portal-wlr
exec xrandr --output HDMI-A-1 --primary
#exec lxqt-policykit-agent
#exec /usr/bin/lxpolkit
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec wayvnc :1

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
  xkb_layout us,de
  xkb_options caps:escape,grp:win_space_toggle

  repeat_delay 300
  repeat_rate 50
}
input type:mouse {
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}

input "TrackBall" {
    accel_profile "flat"
    pointer_accel 0
}

input type:touchpad {
    tap enabled
    natural_scroll disabled
    dwt enabled
}

input type:tablet_pad {
    map_to_output HDMI-A-1
}

input type:tablet_tool {
    map_to_output HDMI-A-1
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    bindsym $mod+u exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # screenshot
    bindsym $mod+Shift+d $screenshot

    # lock screen
    bindsym $mod+Shift+s exec $screen_lock

    # lock screen & sleep
    bindsym $mod+Shift+p exec systemctl suspend & $screen_lock

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

# Define outputs
set $output-primary HDMI-1
set $output-secondary eDP-1

# workspace to displays
workspace 1 output $output-primary
workspace 2 output $output-primary
workspace 3 output $output-primary
workspace 4 output $output-primary
workspace 5 output $output-primary
workspace 6 output $output-primary

workspace 7 output $output-secondary
workspace 8 output $output-secondary
workspace 9 output $output-secondary
workspace 10 output $output-secondary

# Switch to workspace
bindsym --no-repeat $mod+1 workspace number 1;
bindsym --no-repeat $mod+2 workspace number 2;
bindsym --no-repeat $mod+3 workspace number 3;
bindsym --no-repeat $mod+4 workspace number 4;
bindsym --no-repeat $mod+5 workspace number 5;
bindsym --no-repeat $mod+6 workspace number 6;
bindsym --no-repeat $mod+7 workspace number 7;
bindsym --no-repeat $mod+8 workspace number 8;
bindsym --no-repeat $mod+9 workspace number 9;
bindsym --no-repeat $mod+0 workspace number 10;

#bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
#bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"

# Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

for_window [title="^Picture-in-Picture$"] border none, floating enable, sticky enable

bindsym $mod+r mode "resize"

# Sound
#bindsym XF86AudioMute exec pulsemixer --toggle-mute > $WOBSOCK
#bindsym XF86AudioRaiseVolume exec pulsemixer --change-volume +10 > $WOBSOCK
#bindsym XF86AudioLowerVolume exec pulsemixer --change-volume -10 > $WOBSOCK

bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+ && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && (wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q MUTED && echo 0 > $WOBSOCK) || wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK

# Backlight
bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $WOBSOCK
bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $WOBSOCK

# sov keybinding


# sway specific settings
smart_gaps on
smart_borders on
gaps inner 5
gaps outer 5
titlebar_border_thickness 1
titlebar_padding 1
default_border pixel 1
hide_edge_borders --i3 smart

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    status_command i3status_custom
    mode hide
    position bottom
    tray_output HDMI-A-1
}

include @sysconfdir@/sway/config.d/*

# floating windows for development
for_window [title="pinentry-gtk"] floating enable
include pointer

mode passthrough {
    bindsym $mod+Backspace mode default; floating_modifier $mod normal
}
bindsym $mod+Backspace mode passthrough; floating_modifier none

exec "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP"
